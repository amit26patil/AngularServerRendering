{"version":3,"sources":["./ClientApp/$_lazy_route_resource lazy","./ClientApp/app/app.component.css","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kF;;;;;;;ACVA,mB;;;;;;;ACAA,8EAA8E,OAAO,2BAA2B,cAAc,O;;;;;;;;;;;;;;;;;;;;;ACA5E;AACA;AACsB;AAExE,IAAM,QAAQ,GAAG,uFAAY,CAAC,MAAM,CAAC,CAAC;AAOtC;IAME,sBACU,IAAgB,EAChB,KAAoB;QADpB,SAAI,GAAJ,IAAI,CAAY;QAChB,UAAK,GAAL,KAAK,CAAe;QAN9B,UAAK,GAAG,KAAK,CAAC;IAOV,CAAC;IAEL,+BAAQ,GAAR;QAAA,iBAYC;QAXG,QAAQ,CAAC;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAW,CAAC,CAAC;QAElD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,IAAI;iBACN,GAAG,CAAC,qCAAqC,CAAC;iBAC1C,SAAS,CAAC,cAAI;gBACb,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAW,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAvBU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAQgB,wEAAU;YACT,gFAAa;OARnB,YAAY,CAwBxB;IAAD,mBAAC;CAAA;AAxBwB;;;;;;;;;;;;;;;;;;;;ACX6D;AAC9B;AACf;AAEM;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;gBAClE,8EAAgB;gBAChB,6FAA0B;aAC3B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;AClBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC1C,QAAQ,CAAC;IACX,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;SAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_lazy_route_resource lazy\n// module id = ./ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.css\n// module id = ./ClientApp/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n</div>\\n<pre>{{ dogs | json}}</pre>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\n\nconst DOGS_KEY = makeStateKey('dogs');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'app';\n\n  dogs: any;\n\n  constructor(\n    private http: HttpClient,\n    private state: TransferState\n  ) { }\n\n  ngOnInit() {\n      debugger;\n    this.dogs = this.state.get(DOGS_KEY, null as any);\n\n    if (!this.dogs) {\n      this.http\n        .get('https://dog.ceo/api/breeds/list/all')\n        .subscribe(data => {\n          this.dogs = data;\n          this.state.set(DOGS_KEY, data as any);\n        });\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'universal-demo-v5' }),\n    HttpClientModule,\n    BrowserTransferStateModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    debugger;\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n});\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/main.ts"],"sourceRoot":"webpack:///"}